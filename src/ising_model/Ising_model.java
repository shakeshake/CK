/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ising_model;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.Timer;


/**
 *
 * @author Horang
 */
public class Ising_model extends javax.swing.JApplet {
    private int syssize = 50;
    //private int timeSlice = -1;
    
    private IsingCalc IsingModel = new IsingCalc();
    
    //private Timer timer = new Timer();

    private Timer timer4Plot;
    private Timer timer4Graph;
    
    ActionListener teskPerformer4Plot = new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent evt) {
            updatePlot();
        }
    };
    
    ActionListener teskPerformer4Graph = new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent evt) {
            updateGraph();
            }
    };
    
    


    

    /**
     * Initializes the applet Ising_model
     */
    @Override
    public void init() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ising_model.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ising_model.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ising_model.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ising_model.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the applet */
        try {
            java.awt.EventQueue.invokeAndWait(new Runnable() {
                public void run() {
                    initComponents();
                    timer4Plot = new Timer(1, teskPerformer4Plot);
                    timer4Graph = new Timer(1000, teskPerformer4Graph);
                    
                   // timer = new javax.swing.Timer
                    //matrix.setSystemSize(syssize);
                    //matrix.set_rand_matrix();
                    
                    IsingModel.setSystemSize(syssize);
                    
                    
                    IsingModel.set_rand_matrix();
                    updatePlot();
                    updateGraph();
                 
                    updateParam();
                   
                    //update();
                    
                     
                }
            });
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }
    


    /**
     * This method is called from within the init() method to initialize the
     * form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        slider_J = new javax.swing.JSlider();
        matrixPanel = new javax.swing.JPanel();
        label_J = new javax.swing.JLabel();
        txt_J = new javax.swing.JTextField();
        button_start = new javax.swing.JToggleButton();
        txt_netE = new javax.swing.JTextField();
        txt_netM = new javax.swing.JTextField();
        jLabel_netE = new javax.swing.JLabel();
        jLabel_netM = new javax.swing.JLabel();
        slider_T = new javax.swing.JSlider();
        label_T = new javax.swing.JLabel();
        txt_T = new javax.swing.JTextField();

        slider_J.setMinimum(-100);
        slider_J.setValue(0);
        slider_J.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                slider_JStateChanged(evt);
            }
        });

        javax.swing.GroupLayout matrixPanelLayout = new javax.swing.GroupLayout(matrixPanel);
        matrixPanel.setLayout(matrixPanelLayout);
        matrixPanelLayout.setHorizontalGroup(
            matrixPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
        );
        matrixPanelLayout.setVerticalGroup(
            matrixPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
        );

        label_J.setText("J");

        txt_J.setText("0");
        txt_J.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_JActionPerformed(evt);
            }
        });

        button_start.setText("Start");
        button_start.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                button_startStateChanged(evt);
            }
        });
        button_start.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                button_startMouseReleased(evt);
            }
        });
        button_start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_startActionPerformed(evt);
            }
        });

        txt_netE.setText("jTextField2");
        txt_netE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_netEActionPerformed(evt);
            }
        });

        txt_netM.setText("jTextField3");

        jLabel_netE.setText("netEnergy");

        jLabel_netM.setText("netMagnetization");

        slider_T.setMaximum(500);
        slider_T.setValue(0);
        slider_T.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                slider_TStateChanged(evt);
            }
        });

        label_T.setText("Temperature");

        txt_T.setText("0");
        txt_T.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_TActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(matrixPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(txt_T, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(slider_T, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label_J)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(txt_J, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(slider_J, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(button_start, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel_netE)
                                            .addComponent(jLabel_netM))
                                        .addGap(31, 31, 31)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txt_netE)
                                            .addComponent(txt_netM, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                    .addComponent(label_T))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(label_J)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(slider_J, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txt_J, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addComponent(label_T)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(slider_T, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txt_T, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(114, 114, 114)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_netE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel_netE))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_netM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel_netM))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 146, Short.MAX_VALUE)
                        .addComponent(button_start, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(matrixPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txt_JActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_JActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_JActionPerformed

    private void slider_JStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_slider_JStateChanged
        // TODO add your handling code here:
//        String temp = String.format("%.2f", ((double)(jSlider.getValue())/100*5));
//        jTextField1.setText(temp);
//        IsingModel.setJ(Double.valueOf(temp));
        updateParam("J");
    }//GEN-LAST:event_slider_JStateChanged

    private void button_startStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_button_startStateChanged
        // TODO add your handling code here:

        

                
        
    }//GEN-LAST:event_button_startStateChanged

    private void button_startActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_startActionPerformed
        // TODO add your handling code here:


                
        
    }//GEN-LAST:event_button_startActionPerformed

    private void button_startMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_button_startMouseReleased
        // TODO add your handling code here:
        if ("Start".equals(button_start.getText())) {
            button_start.setText("Stop");
            timer4Plot.start();
            timer4Graph.start();
            //update();
            
            
        } else {
            button_start.setText("Start");
            timer4Plot.stop();
            timer4Graph.stop();

        }        
    }//GEN-LAST:event_button_startMouseReleased

    private void txt_netEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_netEActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_netEActionPerformed

    private void slider_TStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_slider_TStateChanged
        // TODO add your handling code here:
        updateParam("T");
    }//GEN-LAST:event_slider_TStateChanged

    private void txt_TActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_TActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_TActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton button_start;
    private javax.swing.JLabel jLabel_netE;
    private javax.swing.JLabel jLabel_netM;
    private javax.swing.JLabel label_J;
    private javax.swing.JLabel label_T;
    private javax.swing.JPanel matrixPanel;
    private javax.swing.JSlider slider_J;
    private javax.swing.JSlider slider_T;
    private javax.swing.JTextField txt_J;
    private javax.swing.JTextField txt_T;
    private javax.swing.JTextField txt_netE;
    private javax.swing.JTextField txt_netM;
    // End of variables declaration//GEN-END:variables


    

    
    private void updatePlot() {

        matrixPanel.setPreferredSize(new Dimension(500,500));
        
        matrixPanel.removeAll();
        matrixPanel.setLayout(new java.awt.BorderLayout());
        //GraphPanel tmpgraph = new GraphPanel(data);
        //DrawMatrix matrix = new DrawMatrix(syssize);  
        
        DrawMatrix matrix = new DrawMatrix(syssize);
        
        //matrix.set_rand_matrix();    
        IsingModel.metroIsing();
        matrix.setMatrix(IsingModel.getMatrix());
 

        matrixPanel.add(matrix, BorderLayout.CENTER);


        matrixPanel.validate();        
        
        

        
    
        
        
    }

    private void updateGraph() {
        txt_netE.setText(String.format("%.2f",(float)IsingModel.get_netEnergy()));
        txt_netM.setText(String.format("%d",(int)IsingModel.get_netMagnetization()));
        
    }


    
    private void updateParam(String Param) {
        String temp;
        if ("J".equals(Param)) {
            temp = String.format("%.1f", ((double)(slider_J.getValue())/100*5));
            txt_J.setText(temp);
            IsingModel.setJ(Double.valueOf(temp));
        } else if ("T".equals(Param)) {
            temp = String.format("%.1f", ((double)(slider_T.getValue())/10));
            txt_T.setText(temp);
            IsingModel.set_temperature(Double.valueOf(temp));
        } else {
        }

    }
    
    private void updateParam() {
        updateParam("J");
        updateParam("T");
        
    }


    
    
    
}


    
